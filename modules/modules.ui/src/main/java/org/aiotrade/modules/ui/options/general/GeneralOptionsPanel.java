/*
 * Copyright (c) 2006-2007, AIOTrade Computing Co. and Contributors
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without 
 * modification, are permitted provided that the following conditions are met:
 * 
 *  o Redistributions of source code must retain the above copyright notice, 
 *    this list of conditions and the following disclaimer. 
 *    
 *  o Redistributions in binary form must reproduce the above copyright notice, 
 *    this list of conditions and the following disclaimer in the documentation 
 *    and/or other materials provided with the distribution. 
 *    
 *  o Neither the name of AIOTrade Computing Co. nor the names of 
 *    its contributors may be used to endorse or promote products derived 
 *    from this software without specific prior written permission. 
 *    
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" 
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, 
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR 
 * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR 
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, 
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, 
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; 
 * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, 
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR 
 * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, 
 * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
package org.aiotrade.modules.ui.options.general;

import javax.swing.JOptionPane;
import org.openide.windows.WindowManager;

/**
 *
 * @author Caoyuan Deng
 */
public class GeneralOptionsPanel extends javax.swing.JPanel {
    
    /** Creates new form GeneralOptionsPanel */
    public GeneralOptionsPanel() {
        initComponents();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        proxyTypeRadioGroup = new javax.swing.ButtonGroup();
        proxyPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        noProxyRadio = new javax.swing.JRadioButton();
        systemProxyRadio = new javax.swing.JRadioButton();
        httpProxyRadio = new javax.swing.JRadioButton();
        jLabel2 = new javax.swing.JLabel();
        proxyHost = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        proxyPort = new javax.swing.JTextField();

        proxyPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(GeneralOptionsPanel.class, "GeneralOptionsPanel.proxyPanel.border.title"))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        jLabel1.setText(org.openide.util.NbBundle.getMessage(GeneralOptionsPanel.class, "GeneralOptionsPanel.jLabel1.text")); // NOI18N

        noProxyRadio.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        noProxyRadio.setText(org.openide.util.NbBundle.getMessage(GeneralOptionsPanel.class, "GeneralOptionsPanel.noProxyRadio.text")); // NOI18N
        noProxyRadio.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        noProxyRadio.setMargin(new java.awt.Insets(0, 0, 0, 0));
        noProxyRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                noProxyRadioActionPerformed(evt);
            }
        });

        systemProxyRadio.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        systemProxyRadio.setText(org.openide.util.NbBundle.getMessage(GeneralOptionsPanel.class, "GeneralOptionsPanel.systemProxyRadio.text")); // NOI18N
        systemProxyRadio.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        systemProxyRadio.setMargin(new java.awt.Insets(0, 0, 0, 0));

        httpProxyRadio.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        httpProxyRadio.setText(org.openide.util.NbBundle.getMessage(GeneralOptionsPanel.class, "GeneralOptionsPanel.httpProxyRadio.text")); // NOI18N
        httpProxyRadio.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        httpProxyRadio.setMargin(new java.awt.Insets(0, 0, 0, 0));
        httpProxyRadio.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                httpProxyRadioStateChanged(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        jLabel2.setText(org.openide.util.NbBundle.getMessage(GeneralOptionsPanel.class, "GeneralOptionsPanel.jLabel2.text")); // NOI18N

        proxyHost.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                proxyHostActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        jLabel3.setText(org.openide.util.NbBundle.getMessage(GeneralOptionsPanel.class, "GeneralOptionsPanel.jLabel3.text")); // NOI18N

        proxyPort.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                proxyPortFocusLost(evt);
            }
        });

        org.jdesktop.layout.GroupLayout proxyPanelLayout = new org.jdesktop.layout.GroupLayout(proxyPanel);
        proxyPanel.setLayout(proxyPanelLayout);
        proxyPanelLayout.setHorizontalGroup(
            proxyPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(proxyPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(proxyPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 100, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                    .add(jLabel3))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(proxyPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(httpProxyRadio)
                    .add(systemProxyRadio)
                    .add(noProxyRadio)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, proxyHost, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 244, Short.MAX_VALUE)
                    .add(proxyPort))
                .addContainerGap())
        );
        proxyPanelLayout.setVerticalGroup(
            proxyPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(proxyPanelLayout.createSequentialGroup()
                .add(proxyPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel1)
                    .add(noProxyRadio))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(systemProxyRadio)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(httpProxyRadio)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(proxyPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel2)
                    .add(proxyHost, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(proxyPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel3)
                    .add(proxyPort, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(proxyPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(proxyPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(134, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    
    private void proxyPortFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_proxyPortFocusLost
        try {
            int port = Integer.parseInt(proxyPort.getText().trim());
            
            /** check port's range validation : */
            if (port < 0 || port > 0xFFFF) {
                JOptionPane.showMessageDialog(
                        WindowManager.getDefault().getMainWindow(),
                        "port should be between 0 to 65535");
            }
        } catch (NumberFormatException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_proxyPortFocusLost
    
    private void httpProxyRadioStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_httpProxyRadioStateChanged
        if (httpProxyRadio.isSelected()) {
            proxyHost.setEnabled(true);
            proxyPort.setEnabled(true);
        } else {
            proxyHost.setEnabled(false);
            proxyPort.setEnabled(false);
        }
    }//GEN-LAST:event_httpProxyRadioStateChanged
    
    private void proxyHostActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_proxyHostActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_proxyHostActionPerformed
    
    private void noProxyRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_noProxyRadioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_noProxyRadioActionPerformed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    protected javax.swing.JRadioButton httpProxyRadio;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    protected javax.swing.JRadioButton noProxyRadio;
    protected javax.swing.JTextField proxyHost;
    private javax.swing.JPanel proxyPanel;
    protected javax.swing.JTextField proxyPort;
    protected javax.swing.ButtonGroup proxyTypeRadioGroup;
    protected javax.swing.JRadioButton systemProxyRadio;
    // End of variables declaration//GEN-END:variables
    
}
